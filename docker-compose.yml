services:
    frankenphp:
        restart: always
        build:
            dockerfile: frankenphp.Dockerfile
            context: .
        ports:
            - "8000:8000"
            - "5173:5173"
        networks:
            - app_network
        env_file:
            - .env
        depends_on:
            - pgsql
            - redis
        volumes:
          - ./:/var/www
    pgsql:
        container_name: pgsql
        image: postgres:17-alpine3.20
        ports:
            - "5432:5432"
        networks:
            - app_network
        volumes:
            - 'pgsql:/var/lib/pgsql'
        environment:
            POSTGRES_DB: ${DB_DATABASE}
            POSTGRES_USER: ${DB_USERNAME}
            POSTGRES_PASSWORD: ${DB_PASSWORD}
    redis:
        container_name: redis
        image: redis:7.4.1-alpine3.20
        ports:
            - "6379:6379"
        networks:
            - app_network
    reverb:
        build:
            context: .
            dockerfile: reverb.Dockerfile
        container_name: reverb
        ports:
            - "8880:8880"
        networks:
            - app_network
        depends_on:
            - frankenphp
        volumes:
          - ./:/var/www
networks:
    app_network:
        driver: bridge
volumes:
    pgsql:
        driver: local
    app:
        driver: local
